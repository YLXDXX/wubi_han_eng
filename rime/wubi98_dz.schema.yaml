# Rime schema settings
# encoding: utf-8

schema:
  schema_id: wubi98_dz
  name: "单字"
  version: "7.0"
  author:
    - 發明人 王永民
  description: |
    五笔98版
    碼表源自 yanhuacuo
    敲 zz 鍵進入拼音反查
  dependencies:
    - py
switches:
  - name: ascii_mode
    reset: 1
  - name: zh_trad
    reset: 0
    states: [ 简,繁 ]
  - name: new_spelling
    reset: 1
    states: [ 隐,显 ]
  - name: rvl_zhuyin
    reset: 1
  - name: GB2312
    reset: 0
    states: [ 扩,常 ]
  - name: new_hide_pinyin
    reset: 1
    states: [ 音, 哑 ]
  - name: single_char
    reset: 0
    states: [ 单, 词 ]
  - name: ascii_punct
    reset: 0
    states: [ 。，, ．， ]
  - name: full_shape
    reset: 0
    states: [ 半, 全 ]
engine:
  filters:
    - simplifier
    - "reverse_lookup_filter@ci_reverse_lookup"
    - lua_filter@new_spelling@spelling
    - lua_filter@single_char
    - lua_filter@null_add_filter
    - uniquifier
  processors:
    - ascii_composer
    - lua_processor@submit_text_processor
    - lua_processor@switch_processor
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - "affix_segmentor@mkst"
    - "affix_segmentor@rvlk1"
    - "affix_segmentor@rvl_zhuyin"
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - "table_translator@rvlk1"
    - table_translator
    - "table_translator@fixed"
    - "table_translator@mkst"
    - "table_translator@rvl_zhuyin"
    - "history_translator@history"
    - "lua_translator@helper"
    - "lua_translator@time_date"
    - "lua_translator@null_add_translator"
speller:
  auto_select: false
  auto_clear: max_length
  delimiter: "`"
  max_code_length: 14
translator:
  dictionary: wubi98_dz
  db_class: tabledb
  initial_quality: 100000
  enable_charset_filter: false
  enable_sentence: false
  enable_encoder: false
  encode_commit_history: false
  max_phrase_length: 4
  enable_completion: false
  enable_user_dict: false
  disable_user_dict_for_patterns:
    - "^z.*$"
fixed:
  __include: /translator
  initial_quality: 1000
  enable_encoder: true
  enable_user_dict: true
  encode_commit_history: false
mkst:
  __include: /translator
  initial_quality: 10
  enable_sentence: true
  prefix: '`'
  tips: "〔精准造词〕"
  tag: mkst
rvl_zhuyin:
  __include: /translator
  initial_quality: 10
  enable_sentence: true
  prefix: '~'
  tips: "〔以形查音〕"
  tag: zhuyin
reverse_lookup:
  __include: /translator
  dictionary: py
  tips: "〔拼音反查〕"
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/
  tag: rvlk2
rvlk1:
  __include: /reverse_lookup
  prefix: "zz"
  tag: rvlk1
  extra_tags:
    - rvlk2
ci_reverse_lookup:
  dictionary: wubi98_dz
  tips: "〔五笔滤镜〕"
  tags:
    - rvlk2
simplifier:
  opencc_config: s2t.json
  option_name: zh_trad
lua_reverse_db:
  spelling: wb_spelling
  code: wb_spelling
recognizer:
  import_preset: default
  patterns:
    email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    mkst: "^[a-y]*`[a-y`]*$"
    punct: "^/([0-9]0?|[A-Za-z]+)$"
    rvlk1: "^zz[a-z]*$"
    rvlk2: "^zz[a-z]*$"
    uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
    url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"
    zhuyin: "~[a-y]*?$"
    helper: '^help$'
    han_eng: "^(?!zz)([a-z]){4,}$|^[A-Z][A-Za-z]*$"
history:
  input: zz
  size: 2
  initial_quality: 1
key_binder:
  bindings:
    - {toggle: GB2312, accept: "Control+Shift+U", when: always}
    - {toggle: single_char, accept: "Control+Shift+K", when: always}
    - {toggle: new_hide_pinyin, accept: "Control+Shift+J", when: always}
    - {toggle: new_spelling, accept: "Control+Shift+H", when: always}
    - {toggle: zh_trad, accept: "Control+Shift+F", when: always}
    - {toggle: zh_trad, accept: "Control+Shift+dollar", when: always}
    - {toggle: zh_trad, accept: "Control+Shift+4", when: always}
    - {send: space, accept: space, when: has_menu}
    - {send: Escape, accept: space, when: composing}
    - {send: Page_Down, accept: equal, when: has_menu}
    - {send: Page_Up, accept: minus, when: has_menu}
    - {accept: semicolon, send: 2, when: has_menu}
    - {accept: apostrophe, send: 3, when: has_menu}
punctuator:
  import_preset: symbols
menu:
  alternative_select_labels:
  - "①"
  - "②"
  - "③"
  - "④"
  - "⑤"
  - "⑥"
  - "⑦"
  - "⑧"
  - "⑨"
  page_size: 5
